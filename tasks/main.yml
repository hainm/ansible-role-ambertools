---
- name: Install necessary packages
  apt: name={{ item }} state=latest update_cache=yes cache_valid_time=3600
  with_items:
    - build-essential
    - cmake
    - csh
    - flex
    - g++
    - gfortran
    - gcc
    - git
    - libbz2-dev
    - libfreetype6-dev
    - liblapack-dev
    - libatlas-dev
    - libopenmpi-dev
    - openmpi-bin
    - openmpi-common
    - patch
    - python-matplotlib
    - python-dev
    - python-pip
    - python-tk
    - software-properties-common
    - tar
    - time
    - wget

- name: pip install python modules
  pip: name={{ item }} state=latest
  with_items:
    - pip
    - Cython
    - mako
    - numpy
    - scipy
    - virtualenv

- name: unarchive ambertools
  unarchive: src={{ ambertools_url }} dest=/usr/local owner=root group=root copy=no

- name: configure ambertools single thread
  command: ./configure --no-updates -noX11 gnu chdir={{ amber_home }}
  env:
    AMBERHOME: "{{ amber_home }}"
    PATH: "$PATH:/usr/lib64/openmpi/bin:{{ amber_home }}/bin"
    LD_LIBRARY_PATH: "{{ amber_home }}/lib"

- name: make install ambertools single thread
  command: make install chdir={{ amber_home }}
  env:
    AMBERHOME: "{{ amber_home }}"
    PATH: "$PATH:/usr/lib64/openmpi/bin:{{ amber_home }}/bin"
    LD_LIBRARY_PATH: "{{ amber_home }}/lib"

- name: configure ambertools opemmpi
  command: ./configure --no-updates -mpi -noX11 gnu chdir={{ amber_home }}
  env:
    AMBERHOME: "{{ amber_home }}"
    PATH: "$PATH:/usr/lib64/openmpi/bin:{{ amber_home }}/bin"
    LD_LIBRARY_PATH: "{{ amber_home }}/lib"

- name: make install ambertools opemmpi
  command: make install chdir={{ amber_home }}
  env:
    AMBERHOME: "{{ amber_home }}"
    PATH: "$PATH:/usr/lib64/openmpi/bin:{{ amber_home }}/bin"
    LD_LIBRARY_PATH: "{{ amber_home }}/lib"
